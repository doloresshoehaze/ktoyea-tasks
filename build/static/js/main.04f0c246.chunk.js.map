{"version":3,"sources":["images/logo.png","pages/App/index.js","pages/Theory/index.js","pages/Tasks/index.js","index.js"],"names":["App","className","src","logo","alt","to","Theory","Tasks","state","isSubmited","isMinimumScoreGayned","score","name","correctAnswer","id","type","weight","answers","text","init","this","tasks","forEach","task","reduce","p","c","setState","values","value","correctCounter","ca","includes","length","topScore","Math","ceil","initialValues","onSubmit","setSubmitting","submit","checkAnwers","handleSubmit","isSubmitting","map","index","answer","htmlFor","checked","orderNumber","split","sort","a","b","replace","disabled","React","Component","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"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","file":"static/js/main.04f0c246.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b90210c1.png\";","import logo from '../../images/logo.png';\nimport './styles.scss';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"background\"></div>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Link\n          className=\"App-link\"\n          to=\"/theory\"\n        >\n          Теория\n        </Link>\n        <Link\n          className=\"App-link\"\n          to=\"/tasks\"\n        >\n          Упражнения\n        </Link>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { Link } from 'react-router-dom';\n\nfunction Theory() {\n  return (\n    <div className=\"Theory\">\n      <h3>Женский род имен прилагательных</h3>\n      <p>Прилагательные во французском языке согласуются в роде и числе с существительным, <br />к которому относятся. Женский род образуется путем прибавления окончания <span className=\"h-blue\">-e</span> <br /> к прилагательному мужского рода:<br />\n        <em>grand - grand<span className=\"h-blue\">e</span></em> <br />\n        <em>petit – petit<span className=\"h-blue\">e</span></em><br />\n        <em>national – national<span className=\"h-blue\">e</span></em></p>\n      <p><span className=\"h-red\">Внимание!</span> Некоторые прилагательные мужского рода тоже имеет на конце эту букву. <br />Их просто надо запомнить. Они по родам не меняются:<br />\n        <em>rouge (красный, -ая)</em><br />\n        <em>jaune (желтый, -ая)</em><br />\n        <em> jeune (молодой, -ая)</em></p>\n      <h3>Особенности образования женского рода:</h3>\n      <p>1. Удвоение согласной + е <br /></p>\n      <p><span className=\"h-blue\">-en / -enne</span><br />\n        <em>un pays européen (европейская страна) – une langue européenne (европейский язык)</em><br />\n\n        <span className=\"h-blue\">-ien / -ienne</span><br />\n\n        <em>un chanteur italien (итальянский певец) – une chanteuse italienne (итальянская певица)</em><br />\n\n        <span className=\"h-blue\">-on / -onne</span><br />\n\n        <em>un garçon mignon (симпатичный мальчик) – une fille mignonne (симпатичная девочка)</em></p>\n      <p>2. Другие случаи: <br /></p>\n      <p><span className=\"h-blue\">-er / -ère</span><br />\n        <em>un homme étranger (мужчина иностранец) – une femme étrangère (женщина иностранка)</em><br />\n\n        <span className=\"h-blue\">-ier / -ière</span><br />\n\n        <em>un problème financier (финансовая проблема) – une question financière (финансовый вопрос</em><br />\n\n        <span className=\"h-blue\">-eux / -euse</span><br />\n\n        <em>un garçon courageux (храбрый мальчик) – une fille courageuse (храбрая девочка)</em><br />\n\n        <span className=\"h-blue\">-teur / -trice</span><br />\n\n        <em>un geste protecteur (покровительственный жест) – une voix protectrice (покровительственный\n\nголос)</em><br />\n\n      </p>\n      <Link\n        className=\"App-link\"\n        to=\"\"\n      >\n        На главную\n      </Link>\n    </div>\n  );\n}\n\nexport default Theory;\n","import { Formik, Field, Form } from 'formik';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\n\nclass Tasks extends React.Component {\n  state = {\n    isSubmited: false,\n    isMinimumScoreGayned: true,\n    score: 0,\n  }\n\n  get tasks() {\n    return [\n      {\n        name: 'Cette route est très (dangereux).',\n        correctAnswer: '2',\n        id: 'second',\n        type: 'radio',\n        weight: 10,\n        answers: [\n          {\n            name: 'dangereux',\n            id: '0',\n          },\n          {\n            name: 'dangereuxe',\n            id: '1',\n          },\n          {\n            name: 'dangereuse',\n            id: '2',\n          },\n        ]\n      },\n      {\n        name: 'Cette nouvelle est (faux).',\n        correctAnswer: '0',\n        id: 'prim',\n        type: 'radio',\n        weight: 10,\n        answers: [\n          {\n            name: 'fausse',\n            id: '0',\n          },\n          {\n            name: 'faux',\n            id: '1',\n          },\n          {\n            name: 'fause',\n            id: '2',\n          },\n        ]\n      },\n      {\n        name: 'Ma voisine est  (curieux) et (indiscret).',\n        correctAnswer: '0',\n        id: 'duo',\n        type: 'radio',\n        weight: 10,\n        answers: [\n          {\n            name: 'curieuse, indiscrète',\n            id: '0',\n          },\n          {\n            name: 'curieuxe, indiscrete',\n            id: '1',\n          },\n          {\n            name: 'curieuse, indiscrette',\n            id: '2',\n          },\n        ]\n      },\n      {\n        name: \"Cette fille n'est pas très(franc); elle est(menteur).\",\n        correctAnswer: '1',\n        id: 'trio',\n        type: 'radio',\n        weight: 10,\n        answers: [\n          {\n            name: 'franche, menteure',\n            id: '0',\n          },\n          {\n            name: 'franche, menteuse',\n            id: '1',\n          },\n          {\n            name: 'franche, mentrice',\n            id: '2',\n          },\n        ]\n      },\n      {\n        name: 'Je vous présente mon (vieux)  ami Pascal.',\n        correctAnswer: '1',\n        id: 'quatro',\n        type: 'radio',\n        weight: 10,\n        answers: [\n          {\n            name: 'vieux',\n            id: '0',\n          },\n          {\n            name: 'vieil',\n            id: '1',\n          },\n          {\n            name: 'vieul',\n            id: '2',\n          },\n        ]\n      },\n\n      {\n        name: 'Заполните пропуски:',\n        text: 'un poète rêveur - une personne <input>',\n        correctAnswer: ['reveuse', 'rêveuse'],\n        id: 'third',\n        type: 'text',\n        weight: 10,\n        // orderNumber: 7,\n      },\n      {\n        text: 'un garçon gentil - une fille <input>',\n        correctAnswer: ['gentille'],\n        id: 'uno',\n        type: 'text',\n        weight: 10,\n      },\n      {\n\n        text: 'l’esprit créateur - l’imagination <input>',\n        correctAnswer: ['créateurice', 'creatrice'],\n        id: 'dos',\n        type: 'text',\n        weight: 10,\n      },\n      {\n\n        text: 'un ami personnel - une amie <input>',\n        correctAnswer: ['personnelle'],\n        id: 'tres',\n        type: 'text',\n        weight: 10,\n      },\n      {\n\n        text: 'un anneau précieux - une bague <input>',\n        correctAnswer: ['précieuse', 'precieuse'],\n        id: 'cuatro',\n        type: 'text',\n        weight: 10,\n      }\n\n    ]\n  }\n\n  get initialValues() {\n    const init = {};\n    this.tasks.forEach(task => {\n      switch (task.type) {\n        case 'checkbox':\n          init[task.id] = [];\n          break;\n        case 'radio':\n          init[task.id] = task.answers[0].id;\n          break;\n        default:\n          init[task.id] = '';\n      }\n    });\n\n    return init;\n  }\n\n  get topScore() {\n    return this.tasks.reduce((p, c) => {\n      p += c.weight;\n      return p;\n    }, 0);\n  }\n\n  submit() {\n    this.setState({ isSubmited: true });\n  }\n\n  checkAnwers(values) {\n    let score = 0;\n\n    this.tasks.forEach(task => {\n      const value = values[task.id];\n      switch (task.type) {\n        case 'checkbox': {\n          let correctCounter = 0;\n\n          task.correctAnswer.forEach(ca => {\n            if (value.includes(ca)) {\n              correctCounter += 1;\n            }\n          })\n\n          if (correctCounter === task.correctAnswer.length) {\n            score += task.weight;\n          }\n\n          break;\n        }\n        case 'text':\n          if (task.correctAnswer.includes(value)) {\n            score += task.weight;\n          }\n          break;\n        default:\n          if (task.correctAnswer === value) {\n            score += task.weight;\n          }\n      }\n    })\n    const isMinimumScoreGayned = score / this.topScore >= 0.6;\n\n    this.setState({ score, isMinimumScoreGayned });\n  }\n\n  render() {\n    const { isSubmited, score, isMinimumScoreGayned } = this.state;\n\n    return (\n      <div className=\"Tasks\">\n        <div className=\"tasks-wrap\">\n          <Link\n            className=\"App-link\"\n            to=\"\"\n          >\n            На главную\n          </Link>\n          {\n            isSubmited ?\n              <h2>Ваш результат: {Math.ceil(score / this.topScore * 10)} баллов</h2> :\n              <h2>Выберите правильный вариант </h2>\n          }\n          {\n            isSubmited && !isMinimumScoreGayned ?\n              <h3>\n                <Link\n                  className=\"App-link\"\n                  to=\"/theory\"\n                >\n                  Вернитесь к теории!\n            </Link> </h3> :\n              null\n          }\n          {isSubmited ?\n            null :\n            <Formik\n              initialValues={this.initialValues}\n              onSubmit={(values, { setSubmitting }) => {\n                this.submit(values);\n                this.checkAnwers(values);\n                setSubmitting(false);\n              }}\n            >\n              {({\n                values,\n                handleSubmit,\n                isSubmitting,\n              }) => (\n                <Form className=\"form\" onSubmit={handleSubmit}>\n                  {this.tasks.map((task, index) => {\n                    switch (task.type) {\n                      case 'checkbox':\n                        return (<div key={task.id} className=\"task\">\n                          <h3>{index + 1}. {task.name}</h3>\n                          <div className=\"answers\">\n                            {task.answers.map(answer => (\n                              <label key={answer.id} className=\"answer\" htmlFor={task.id + answer.id}>\n                                <Field\n                                  name={task.id}\n                                  id={task.id + answer.id}\n                                  type=\"checkbox\"\n                                  checked={values[task.id].includes(answer.id)}\n                                  value={answer.id}></Field>\n                                {answer.name}\n                              </label>\n                            ))}\n                          </div>\n                        </div>)\n                      case 'radio':\n                        return (<div key={task.id} className=\"task\">\n                          <h3>{index + 1}. {task.name}</h3>\n                          <div className=\"answers\">\n                            {task.answers.map(answer => (\n                              <label key={answer.id} className=\"answer\" htmlFor={task.id + answer.id}>\n                                <Field name={task.id}\n                                  id={task.id + answer.id}\n                                  type=\"radio\"\n                                  checked={values[task.id] === answer.id}\n                                  value={answer.id}></Field>\n                                {answer.name}\n                              </label>\n                            ))}\n                          </div>\n                        </div>)\n                      case 'text':\n                        return (<div key={task.id} className=\"task\">\n                          {task.name ? <h3>{task.orderNumber || index + 1}. {task.name}</h3> : null}\n                          <span className=\"answer-text\">\n                            {task.text.split('<input>')[0]}\n                            <div className=\"input-wrap\">\n                              <Field type=\"text\"\n                                id={task.id}\n                                value={values[task.id]}></Field>\n                              <p className=\"fake\">{task.correctAnswer.sort((a, b) => a.length - b.length)[0].replace(/[A-Za-z]/ig, 'A')}</p>\n                            </div>\n                            {task.text.split('<input>')[1]}\n                          </span>\n                        </div>)\n                      default:\n                        return null;\n                    }\n                  })}\n                  <button type=\"submit\" className=\"button\" disabled={isSubmitting}>\n                    Получить результат\n              </button>\n                </Form>\n              )}\n            </Formik>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tasks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.scss';\nimport App from './pages/App';\nimport Theory from './pages/Theory';\nimport Tasks from './pages/Tasks';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path='/theory'>\n          <Theory />\n        </Route>\n        <Route path='/tasks'>\n          <Tasks />\n        </Route>\n        <Route path='/'>\n          <App />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}